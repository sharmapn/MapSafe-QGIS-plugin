{
  "contractName": "Location",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "locations",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb9e0db35"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_location",
          "type": "string"
        }
      ],
      "name": "mintNFT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xfb37e883"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461010157806306fdde0314610173578063081812fc14610203578063095ea7b31461027e57806318160ddd146102d957806323b872dd146103045780632f745c591461037f57806342842e0e146103ee5780634f6ccce7146104695780636352211e146104b857806370a082311461053357806395d89b4114610598578063a22cb46514610628578063b88d4fde14610685578063b9e0db3514610797578063c87b56dd1461084b578063e985e9c5146108ff578063fb37e88314610988575b600080fd5b34801561010d57600080fd5b506101596004803603602081101561012457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a64565b604051808215151515815260200191505060405180910390f35b34801561017f57600080fd5b50610188610acb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b5061023c6004803603602081101561022657600080fd5b8101908080359060200190929190505050610b6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028a57600080fd5b506102d7600480360360408110156102a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4d565b005b3480156102e557600080fd5b506102ee610eb0565b6040518082815260200191505060405180910390f35b34801561031057600080fd5b5061037d6004803603606081101561032757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ebd565b005b34801561038b57600080fd5b506103d8600480360360408110156103a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f71565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b506104676004803603606081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611077565b005b34801561047557600080fd5b506104a26004803603602081101561048c57600080fd5b8101908080359060200190929190505050611098565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b506104f1600480360360208110156104db57600080fd5b810190808035906020019092919050505061115f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053f57600080fd5b506105826004803603602081101561055657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061126c565b6040518082815260200191505060405180910390f35b3480156105a457600080fd5b506105ad611386565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063457600080fd5b506106836004803603604081101561064b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611428565b005b34801561069157600080fd5b50610795600480360360808110156106a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561070f57600080fd5b82018360208201111561072157600080fd5b8035906020019184600183028401116401000000008311171561074357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115cd565b005b3480156107a357600080fd5b506107d0600480360360208110156107ba57600080fd5b8101908080359060200190929190505050611684565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108105780820151818401526020810190506107f5565b50505050905090810190601f16801561083d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561085757600080fd5b506108846004803603602081101561086e57600080fd5b810190808035906020019092919050505061173f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108c45780820151818401526020810190506108a9565b50505050905090810190601f1680156108f15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561090b57600080fd5b5061096e6004803603604081101561092257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611897565b604051808215151515815260200191505060405180910390f35b34801561099457600080fd5b50610a4e600480360360208110156109ab57600080fd5b81019080803590602001906401000000008111156109c857600080fd5b8201836020820111156109da57600080fd5b803590602001918460018302840111640100000000831117156109fc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061192b565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b635780601f10610b3857610100808354040283529160200191610b63565b820191906000526020600020905b815481529060010190602001808311610b4657829003601f168201915b5050505050905090565b6000610b7882611aa4565b1515610c12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526020017f697374656e7420746f6b656e000000000000000000000000000000000000000081525060400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c588261115f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d645750610d638133611897565b5b1515610dfe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781526020017f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000081525060400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610ec73382611b16565b1515610f61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f81526020017f776e6572206e6f7220617070726f76656400000000000000000000000000000081525060400191505060405180910390fd5b610f6c838383611c4f565b505050565b6000610f7c8361126c565b82101515611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f455243373231456e756d657261626c653a206f776e657220696e646578206f7581526020017f74206f6620626f756e647300000000000000000000000000000000000000000081525060400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561106457fe5b9060005260206000200154905092915050565b61109383838360206040519081016040528060008152506115cd565b505050565b60006110a2610eb0565b8210151561113e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f81526020017f7574206f6620626f756e6473000000000000000000000000000000000000000081525060400191505060405180910390fd5b60078281548110151561114d57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611263576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526020017f656e7420746f6b656e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4552433732313a2062616c616e636520717565727920666f7220746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61137f600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c73565b9050919050565b6060600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561141e5780601f106113f35761010080835404028352916020019161141e565b820191906000526020600020905b81548152906001019060200180831161140157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6115d8848484610ebd565b6115e484848484611c81565b151561167e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581526020017f63656976657220696d706c656d656e746572000000000000000000000000000081525060400191505060405180910390fd5b50505050565b600c8181548110151561169357fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117375780601f1061170c57610100808354040283529160200191611737565b820191906000526020600020905b81548152906001019060200180831161171a57829003601f168201915b505050505081565b606061174a82611aa4565b15156117e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526020017f6e6578697374656e7420746f6b656e000000000000000000000000000000000081525060400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561188b5780601f106118605761010080835404028352916020019161188b565b820191906000526020600020905b81548152906001019060200180831161186e57829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611937600e611ea4565b6000611943600e611c73565b9050600d836040518082805190602001908083835b60208310151561197d5780518252602082019150602081019050602083039250611958565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161515156119ca57600080fd5b6000600c849080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190611a09929190612814565b509050611a163382611eba565b6001600d856040518082805190602001908083835b602083101515611a505780518252602082019150602081019050602083039250611a2b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055508192505050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611b2182611aa4565b1515611bbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526020017f697374656e7420746f6b656e000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000611bc68361115f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c3557508373ffffffffffffffffffffffffffffffffffffffff16611c1d84610b6d565b73ffffffffffffffffffffffffffffffffffffffff16145b80611c465750611c458185611897565b5b91505092915050565b611c5a838383611edb565b611c6483826121c0565b611c6e8282612364565b505050565b600081600001549050919050565b6000611ca28473ffffffffffffffffffffffffffffffffffffffff1661242b565b1515611cb15760019050611e9c565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611da8578082015181840152602081019050611d8d565b50505050905090810190601f168015611dd55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611df757600080fd5b505af1158015611e0b573d6000803e3d6000fd5b505050506040513d6020811015611e2157600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6001816000016000828254019250508190555050565b611ec4828261243e565b611ece8282612364565b611ed78161265a565b5050565b8273ffffffffffffffffffffffffffffffffffffffff16611efb8261115f565b73ffffffffffffffffffffffffffffffffffffffff16141515611fac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526020017f73206e6f74206f776e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612077576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4552433732313a207472616e7366657220746f20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612080816126a6565b6120c7600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612766565b61210e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ea4565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006122186001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061278990919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114151561230b576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561228957fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156122e357fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361235d9190612894565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6124ec81611aa4565b151515612561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125fa600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ea4565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156127635760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61277e6001826000015461278990919063ffffffff16565b816000018190555050565b6000828211151515612803576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061285557805160ff1916838001178555612883565b82800160010185558215612883579182015b82811115612882578251825591602001919060010190612867565b5b50905061289091906128c0565b5090565b8154818355818111156128bb578183600052602060002091820191016128ba91906128c0565b5b505050565b6128e291905b808211156128de5760008160009055506001016128c6565b5090565b9056fea165627a7a72305820ee292bb6cd4df088cb1b6348b21f0c4ac43e6a19a456e47a7623af57cd16d2450029",
  "sourceMap": "52:3830:1:-;;;587:61;8:9:-1;5:2;;;30:1;27;20:12;5:2;587:61:1;36885:155:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36962:4;36968:6;10817:40;10484:10;10836:20;;10817:18;;;:40;;;:::i;:::-;13817;13691:10;13836:20;;13817:18;;;:40;;;:::i;:::-;25848:51;25663:10;25867:31;;25848:18;;;:51;;;:::i;:::-;34528:4;34520:5;:12;;;;;;;;;;;;:::i;:::-;;34552:6;34542:7;:16;;;;;;;;;;;;:::i;:::-;;34646:49;34382:10;34665:29;;34646:18;;;:49;;;:::i;:::-;34448:254;;36885:155;;52:3830:1;;11541:190:0;11631:10;11616:25;;:11;:25;;;;;11608:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11720:4;11684:20;:33;11705:11;11684:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;11541:190;:::o;52:3830:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "52:3830:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11014:133:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11014:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11014:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34807:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34807:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;34807:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15834:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15834:200:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15834:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15138:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15138:411:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15138:411:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26662:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26662:94:0;;;;;;;;;;;;;;;;;;;;;;;17474:285;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17474:285:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17474:285:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26280:229;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26280:229:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26280:229:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18392:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18392:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18392:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27094:196;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27094:196:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27094:196:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14494:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14494:223:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14494:223:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14068:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14068:207:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14068:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34999:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34999:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;34999:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16327:243;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16327:243:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16327:243:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19229:265;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19229:265:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;19229:265:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;19229:265:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19229:265:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19229:265:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;19229:265:0;;;;;;;;;;;;;;;;;;320:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;320:25:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;320:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;320:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35286:202:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35286:202:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;35286:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;35286:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16892:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16892:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16892:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:328:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:328:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;767:328:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;767:328:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;767:328:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;767:328:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;767:328:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11014:133:0;11084:4;11107:20;:33;11128:11;11107:33;;;;;;;;;;;;;;;;;;;;;;;;;;;11100:40;;11014:133;;;:::o;34807:83::-;34846:13;34878:5;34871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34807:83;:::o;15834:200::-;15893:7;15920:16;15928:7;15920;:16::i;:::-;15912:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16003:15;:24;16019:7;16003:24;;;;;;;;;;;;;;;;;;;;;15996:31;;15834:200;;;:::o;15138:411::-;15201:13;15217:16;15225:7;15217;:16::i;:::-;15201:32;;15257:5;15251:11;;:2;:11;;;;15243:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15333:5;15319:19;;:10;:19;;;:58;;;;15342:35;15359:5;15366:10;15342:16;:35::i;:::-;15319:58;15311:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15497:2;15470:15;:24;15486:7;15470:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15534:7;15530:2;15514:28;;15523:5;15514:28;;;;;;;;;;;;15138:411;;;:::o;26662:94::-;26706:7;26732:10;:17;;;;26725:24;;26662:94;:::o;17474:285::-;17616:39;17635:10;17647:7;17616:18;:39::i;:::-;17608:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17720:32;17734:4;17740:2;17744:7;17720:13;:32::i;:::-;17474:285;;;:::o;26280:229::-;26360:7;26395:16;26405:5;26395:9;:16::i;:::-;26387:5;:24;26379:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26476:12;:19;26489:5;26476:19;;;;;;;;;;;;;;;26496:5;26476:26;;;;;;;;;;;;;;;;;;26469:33;;26280:229;;;;:::o;18392:132::-;18478:39;18495:4;18501:2;18505:7;18478:39;;;;;;;;;;;;;:16;:39::i;:::-;18392:132;;;:::o;27094:196::-;27152:7;27187:13;:11;:13::i;:::-;27179:5;:21;27171:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27266:10;27277:5;27266:17;;;;;;;;;;;;;;;;;;27259:24;;27094:196;;;:::o;14494:223::-;14549:7;14568:13;14584:11;:20;14596:7;14584:20;;;;;;;;;;;;;;;;;;;;;14568:36;;14639:1;14622:19;;:5;:19;;;;14614:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14705:5;14698:12;;;14494:223;;;:::o;14068:207::-;14123:7;14167:1;14150:19;;:5;:19;;;;14142:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14234:34;:17;:24;14252:5;14234:24;;;;;;;;;;;;;;;:32;:34::i;:::-;14227:41;;14068:207;;;:::o;34999:87::-;35040:13;35072:7;35065:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34999:87;:::o;16327:243::-;16412:10;16406:16;;:2;:16;;;;16398:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16500:8;16463:18;:30;16482:10;16463:30;;;;;;;;;;;;;;;:34;16494:2;16463:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;16550:2;16523:40;;16538:10;16523:40;;;16554:8;16523:40;;;;;;;;;;;;;;;;;;;;;;16327:243;;:::o;19229:265::-;19335:31;19348:4;19354:2;19358:7;19335:12;:31::i;:::-;19384:48;19407:4;19413:2;19417:7;19426:5;19384:22;:48::i;:::-;19376:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19229:265;;;;:::o;320:25:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;35286:202:0:-;35344:13;35377:16;35385:7;35377;:16::i;:::-;35369:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35462:10;:19;35473:7;35462:19;;;;;;;;;;;35455:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35286:202;;;:::o;16892:145::-;16972:4;16995:18;:25;17014:5;16995:25;;;;;;;;;;;;;;;:35;17021:8;16995:35;;;;;;;;;;;;;;;;;;;;;;;;;16988:42;;16892:145;;;;:::o;767:328:1:-;825:7;845:21;:9;:19;:21::i;:::-;872:17;892:19;:9;:17;:19::i;:::-;872:39;;931:15;947:9;931:26;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;931:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:27;922:36;;;;;;;;964:8;975:9;990;975:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;975:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;964:36;;1006:22;1012:10;1024:3;1006:5;:22::i;:::-;1063:4;1034:15;1050:9;1034:26;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1034:26:1;;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1081:9;1074:16;;;;767:328;;;:::o;19689:152:0:-;19746:4;19762:13;19778:11;:20;19790:7;19778:20;;;;;;;;;;;;;;;;;;;;;19762:36;;19832:1;19815:19;;:5;:19;;;;19808:26;;;19689:152;;;:::o;20202:329::-;20287:4;20311:16;20319:7;20311;:16::i;:::-;20303:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20386:13;20402:16;20410:7;20402;:16::i;:::-;20386:32;;20447:5;20436:16;;:7;:16;;;:51;;;;20480:7;20456:31;;:20;20468:7;20456:11;:20::i;:::-;:31;;;20436:51;:87;;;;20491:32;20508:5;20515:7;20491:16;:32::i;:::-;20436:87;20428:96;;;20202:329;;;;:::o;27665:239::-;27750:38;27770:4;27776:2;27780:7;27750:19;:38::i;:::-;27799:47;27832:4;27838:7;27799:32;:47::i;:::-;27857:40;27885:2;27889:7;27857:27;:40::i;:::-;27665:239;;;:::o;9739:112::-;9804:7;9830;:14;;;9823:21;;9739:112;;;:::o;23368:347::-;23489:4;23514:15;:2;:13;;;:15::i;:::-;23513:16;23509:58;;;23552:4;23545:11;;;;23509:58;23577:13;23609:2;23593:36;;;23630:10;23642:4;23648:7;23657:5;23593:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;23593:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23593:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23593:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23593:70:0;;;;;;;;;;;;;;;;23577:86;;12310:10;23691:16;;23681:26;;;:6;:26;;;;23673:35;;;23368:347;;;;;;;:::o;9857:89::-;9938:1;9920:7;:14;;;:19;;;;;;;;;;;9857:89;:::o;28161:196::-;28224:24;28236:2;28240:7;28224:11;:24::i;:::-;28259:40;28287:2;28291:7;28259:27;:40::i;:::-;28310;28342:7;28310:31;:40::i;:::-;28161:196;;:::o;22348:447::-;22461:4;22441:24;;:16;22449:7;22441;:16::i;:::-;:24;;;22433:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22543:1;22529:16;;:2;:16;;;;22521:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22597:23;22612:7;22597:14;:23::i;:::-;22631:35;:17;:23;22649:4;22631:23;;;;;;;;;;;;;;;:33;:35::i;:::-;22676:33;:17;:21;22694:2;22676:21;;;;;;;;;;;;;;;:31;:33::i;:::-;22743:2;22720:11;:20;22732:7;22720:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;22780:7;22776:2;22761:27;;22770:4;22761:27;;;;;;;;;;;;22348:447;;;:::o;30773:1128::-;31035:22;31060:32;31090:1;31060:12;:18;31073:4;31060:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;31035:57;;31102:18;31123:17;:26;31141:7;31123:26;;;;;;;;;;;;31102:47;;31267:14;31253:10;:28;;31249:323;;;31297:19;31319:12;:18;31332:4;31319:18;;;;;;;;;;;;;;;31338:14;31319:34;;;;;;;;;;;;;;;;;;31297:56;;31401:11;31368:12;:18;31381:4;31368:18;;;;;;;;;;;;;;;31387:10;31368:30;;;;;;;;;;;;;;;;;:44;;;;31517:10;31484:17;:30;31502:11;31484:30;;;;;;;;;;;:43;;;;31249:323;;31658:12;:18;31671:4;31658:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;30773:1128;;;;:::o;29619:183::-;29732:12;:16;29745:2;29732:16;;;;;;;;;;;;;;;:23;;;;29703:17;:26;29721:7;29703:26;;;;;;;;;;;:52;;;;29765:12;:16;29778:2;29765:16;;;;;;;;;;;;;;;29787:7;29765:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;29765:30:0;;;;;;;;;;;;;;;;;;;;;;29619:183;;:::o;8236:413::-;8296:4;8499:12;8608:7;8596:20;8588:28;;8641:1;8634:4;:8;8627:15;;;8236:413;;;:::o;20776:327::-;20861:1;20847:16;;:2;:16;;;;20839:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20919:16;20927:7;20919;:16::i;:::-;20918:17;20910:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21002:2;20979:11;:20;20991:7;20979:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;21014:33;:17;:21;21032:2;21014:21;;;;;;;;;;;;;;;:31;:33::i;:::-;21088:7;21084:2;21063:33;;21080:1;21063:33;;;;;;;;;;;;20776:327;;:::o;29997:161::-;30100:10;:17;;;;30073:15;:24;30089:7;30073:24;;;;;;;;;;;:44;;;;30127:10;30143:7;30127:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;30127:24:0;;;;;;;;;;;;;;;;;;;;;;29997:161;:::o;23877:171::-;23976:1;23940:38;;:15;:24;23956:7;23940:24;;;;;;;;;;;;;;;;;;;;;:38;;;;23936:106;;;24029:1;23994:15;:24;24010:7;23994:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;23936:106;23877:171;:::o;9952:108::-;10032:21;10051:1;10032:7;:14;;;:18;;:21;;;;:::i;:::-;10015:7;:14;;:38;;;;9952:108;:::o;5386:179::-;5444:7;5476:1;5471;:6;;5463:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5522:9;5538:1;5534;:5;5522:17;;5557:1;5550:8;;;5386:179;;;;:::o;52:3830:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.0;\n\nimport \"./ERC721Full.sol\";\n\ncontract Location is ERC721Full {\n  //09-10-2021\n//  struct Location {\n        //uint256 genes;\n        //uint64 birthTime;\n//        uint32 location;\n//        uint32 BMAId;\n        //uint32 dadId;\n        //uint16 generation;\n //   }\n    //Location[] locations;\n\n\n  string[] public locations;\n  mapping(string => bool) _locationExists;\n\n  //https://stackoverflow.com/questions/69239240/polygon-transaction-working-just-fine-on-mumbai-but-not-on-mainnet\n  using Counters for Counters.Counter;\n  Counters.Counter private _tokenIds;\n\n  constructor() ERC721Full(\"Location\", \"LOCATION\") public {\n  }\n\n  // E.G. color = \"#FFFFFF\"  //public only owner? - https://blog.logrocket.com/how-to-create-nfts-with-javascript/\n  function mintNFT(string memory _location) public returns (uint256) {\n    \n    _tokenIds.increment();\n    uint256 newItemId = _tokenIds.current();\n    \n    require(!_locationExists[_location]);\n    uint _id = locations.push(_location);\n    _mint(msg.sender, _id);\n    _locationExists[_location] = true;\n\n    return newItemId;\n  }\n\n  //23-10-2021..get location details\n  // Get the property details.\n  //https://github.com/varshanipreddy/land-records-blockchain\n\t// function getPropertyDetails(uint _propId) view public returns (Status, uint, address)  {\n\t//\treturn (properties[_propId].status, properties[_propId].value, properties[_propId].currOwner);\n\t//}\n\n  //09-10-2021..added\n /*\n  function getLocation(uint256 tokenId) public view returns (\n        //uint256 genes,\n        //uint256 birthTime,\n        //uint256 mumId,\n        //uint256 dadId,\n        uint256 location) //code looks cleaner when the params appear here vs. in the return statement.\n        {\n            require(tokenId < birdies.length, \"Token ID doesn't exist.\");\n            Bird storage bird = birdies[tokenId];//saves space over using memory, which would make a copy\n            \n            genes = bird.genes;\n            birthTime = uint256(bird.birthTime);\n            mumId = uint256(bird.mumId);\n            dadId = uint256(bird.dadId);\n            generation = uint256(bird.generation);\n    } */\n  \n  /*\n  function getAllLocationsOfOwner(address owner) external view returns(uint256[] memory) {\n        uint256[] memory allLocationsOfOwner = new uint[](ownsNumberOfTokens[owner]);\n        uint256 j = 0;\n        for (uint256 i = 0; i < locations.length; i++) {\n            if (locationOwner[i] == owner) {\n                allLocationsOfOwner[j] = i;\n                j = SafeMath.add(j, 1);\n            }\n        }\n        return allLocationsOfOwner;\n    }\n\n  function ownerOf(uint256 tokenId) external view returns (address owner) {\n        require(tokenId < locations.length, \"Token ID doesn't exist.\");\n        return locationOwner[tokenId];\n    }  \n\n  function balanceOf(address owner) external view returns (uint256 balance) {\n        return ownsNumberOfTokens[owner];\n    }\n  */\n\n  //https://github.com/devpavan04/cryptoboys-nft-marketplace/blob/main/src/contracts/CryptoBoys.sol\n  // get owner of the token\n  /*\n  function getTokenOwner(uint256 _tokenId) public view returns(address) {\n    address _tokenOwner = ownerOf(_tokenId);\n    return _tokenOwner;\n  }\n\n  // get metadata of the token\n  function getTokenMetaData(uint _tokenId) public view returns(string memory) {\n    string memory tokenMetaData = tokenURI(_tokenId);\n    return tokenMetaData;\n  }\n\n  // get total number of tokens minted so far\n  function getNumberOfTokensMinted() public view returns(uint256) {\n    uint256 totalNumberOfTokensMinted = totalSupply();\n    return totalNumberOfTokensMinted;\n  }\n\n  // get total number of tokens owned by an address\n  function getTotalNumberOfTokensOwnedByAnAddress(address _owner) public view returns(uint256) {\n    uint256 totalNumberOfTokensOwned = balanceOf(_owner);\n    return totalNumberOfTokensOwned;\n  }\n  */\n  \n}",
  "sourcePath": "D:/DSToolNFT/nft-master/src/contracts/Location.sol",
  "ast": {
    "absolutePath": "/D/DSToolNFT/nft-master/src/contracts/Location.sol",
    "exportedSymbols": {
      "Location": [
        1527
      ]
    },
    "id": 1528,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1456,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "/D/DSToolNFT/nft-master/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 1457,
        "nodeType": "ImportDirective",
        "scope": 1528,
        "sourceUnit": 1455,
        "src": "24:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1458,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "73:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1454",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1459,
            "nodeType": "InheritanceSpecifier",
            "src": "73:10:1"
          }
        ],
        "contractDependencies": [
          930,
          955,
          1288,
          9,
          110,
          372,
          1309,
          1434,
          1454
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1527,
        "linearizedBaseContracts": [
          1527,
          1454,
          1434,
          1309,
          1288,
          955,
          930,
          110,
          372,
          9
        ],
        "name": "Location",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1462,
            "name": "locations",
            "nodeType": "VariableDeclaration",
            "scope": 1527,
            "src": "320:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 1460,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "320:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 1461,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "320:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1466,
            "name": "_locationExists",
            "nodeType": "VariableDeclaration",
            "scope": 1527,
            "src": "349:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 1465,
              "keyType": {
                "id": 1463,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "357:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "349:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 1464,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "367:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "id": 1469,
            "libraryName": {
              "contractScope": null,
              "id": 1467,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 322,
              "src": "515:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$322",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "509:36:1",
            "typeName": {
              "contractScope": null,
              "id": 1468,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "528:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$282_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 1471,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 1527,
            "src": "548:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$282_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1470,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "548:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$282_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1478,
              "nodeType": "Block",
              "src": "643:5:1",
              "statements": []
            },
            "documentation": null,
            "id": 1479,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4c6f636174696f6e",
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "612:10:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b9088fdf6267db9fe5f171c8aed48ed55286d49df509672bfe1d13cd873bcd76",
                      "typeString": "literal_string \"Location\""
                    },
                    "value": "Location"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4c4f434154494f4e",
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "624:10:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1f7b86e001847427515153a9bb986c2427b55402320993b754b7ecb293f3bd51",
                      "typeString": "literal_string \"LOCATION\""
                    },
                    "value": "LOCATION"
                  }
                ],
                "id": 1476,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1473,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "601:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1454_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "601:34:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:2:1"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:1"
            },
            "scope": 1527,
            "src": "587:61:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1525,
              "nodeType": "Block",
              "src": "834:261:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "845:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$282_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 305,
                      "src": "845:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$282_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$282_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "845:21:1"
                },
                {
                  "assignments": [
                    1492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1492,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1525,
                      "src": "872:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "872:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1496,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "892:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$282_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 293,
                      "src": "892:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$282_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$282_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "930:27:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1498,
                            "name": "_locationExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1466,
                            "src": "931:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 1500,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1499,
                            "name": "_location",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "947:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "931:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1602,
                        1603
                      ],
                      "referencedDeclaration": 1602,
                      "src": "922:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1503,
                  "nodeType": "ExpressionStatement",
                  "src": "922:36:1"
                },
                {
                  "assignments": [
                    1505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1505,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1525,
                      "src": "964:8:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1504,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "964:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1510,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1508,
                        "name": "_location",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "990:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1506,
                        "name": "locations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "975:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "975:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "964:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1512,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1599,
                          "src": "1012:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1012:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1514,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "1024:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1511,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1095
                      ],
                      "referencedDeclaration": 1095,
                      "src": "1006:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1517,
                        "name": "_locationExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "1034:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1519,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1518,
                        "name": "_location",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "1050:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1034:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1063:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1034:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1523,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1492,
                    "src": "1081:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1485,
                  "id": 1524,
                  "nodeType": "Return",
                  "src": "1074:16:1"
                }
              ]
            },
            "documentation": null,
            "id": 1526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "name": "_location",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "784:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "783:25:1"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "825:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:9:1"
            },
            "scope": 1527,
            "src": "767:328:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1528,
        "src": "52:3830:1"
      }
    ],
    "src": "0:3882:1"
  },
  "legacyAST": {
    "absolutePath": "/D/DSToolNFT/nft-master/src/contracts/Location.sol",
    "exportedSymbols": {
      "Location": [
        1527
      ]
    },
    "id": 1528,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1456,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "/D/DSToolNFT/nft-master/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 1457,
        "nodeType": "ImportDirective",
        "scope": 1528,
        "sourceUnit": 1455,
        "src": "24:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1458,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "73:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1454",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1459,
            "nodeType": "InheritanceSpecifier",
            "src": "73:10:1"
          }
        ],
        "contractDependencies": [
          930,
          955,
          1288,
          9,
          110,
          372,
          1309,
          1434,
          1454
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1527,
        "linearizedBaseContracts": [
          1527,
          1454,
          1434,
          1309,
          1288,
          955,
          930,
          110,
          372,
          9
        ],
        "name": "Location",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1462,
            "name": "locations",
            "nodeType": "VariableDeclaration",
            "scope": 1527,
            "src": "320:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 1460,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "320:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 1461,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "320:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1466,
            "name": "_locationExists",
            "nodeType": "VariableDeclaration",
            "scope": 1527,
            "src": "349:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 1465,
              "keyType": {
                "id": 1463,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "357:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "349:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 1464,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "367:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "id": 1469,
            "libraryName": {
              "contractScope": null,
              "id": 1467,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 322,
              "src": "515:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$322",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "509:36:1",
            "typeName": {
              "contractScope": null,
              "id": 1468,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "528:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$282_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 1471,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 1527,
            "src": "548:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$282_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1470,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "548:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$282_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1478,
              "nodeType": "Block",
              "src": "643:5:1",
              "statements": []
            },
            "documentation": null,
            "id": 1479,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4c6f636174696f6e",
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "612:10:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b9088fdf6267db9fe5f171c8aed48ed55286d49df509672bfe1d13cd873bcd76",
                      "typeString": "literal_string \"Location\""
                    },
                    "value": "Location"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4c4f434154494f4e",
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "624:10:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1f7b86e001847427515153a9bb986c2427b55402320993b754b7ecb293f3bd51",
                      "typeString": "literal_string \"LOCATION\""
                    },
                    "value": "LOCATION"
                  }
                ],
                "id": 1476,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1473,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "601:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1454_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "601:34:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:2:1"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:1"
            },
            "scope": 1527,
            "src": "587:61:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1525,
              "nodeType": "Block",
              "src": "834:261:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "845:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$282_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 305,
                      "src": "845:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$282_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$282_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "845:21:1"
                },
                {
                  "assignments": [
                    1492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1492,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1525,
                      "src": "872:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "872:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1496,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "892:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$282_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 293,
                      "src": "892:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$282_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$282_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "930:27:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1498,
                            "name": "_locationExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1466,
                            "src": "931:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 1500,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1499,
                            "name": "_location",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "947:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "931:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1602,
                        1603
                      ],
                      "referencedDeclaration": 1602,
                      "src": "922:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1503,
                  "nodeType": "ExpressionStatement",
                  "src": "922:36:1"
                },
                {
                  "assignments": [
                    1505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1505,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1525,
                      "src": "964:8:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1504,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "964:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1510,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1508,
                        "name": "_location",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "990:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1506,
                        "name": "locations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "975:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "975:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "964:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1512,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1599,
                          "src": "1012:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1012:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1514,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "1024:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1511,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1095
                      ],
                      "referencedDeclaration": 1095,
                      "src": "1006:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1517,
                        "name": "_locationExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "1034:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1519,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1518,
                        "name": "_location",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "1050:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1034:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1063:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1034:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1523,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1492,
                    "src": "1081:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1485,
                  "id": 1524,
                  "nodeType": "Return",
                  "src": "1074:16:1"
                }
              ]
            },
            "documentation": null,
            "id": 1526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "name": "_location",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "784:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "783:25:1"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "825:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:9:1"
            },
            "scope": 1527,
            "src": "767:328:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1528,
        "src": "52:3830:1"
      }
    ],
    "src": "0:3882:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xa505630672898f901A0c6B261A693C39f17e66B8",
      "transactionHash": "0x31f670951d2909a0a0fca5744ff364e9505e8193f08d031de71d982745a3a485"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xC98F262420629544BB60041765547a8D7c42619F",
      "transactionHash": "0x33ceae9f4d5300aa83bb5813b3c3e495044ce4fbaa09e94ab54cdd8d144c0e17"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2021-10-30T01:02:26.808Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}